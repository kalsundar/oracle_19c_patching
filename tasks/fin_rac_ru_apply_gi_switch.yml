---
- name: rollback one-off patch on the database home
  ansible.builtin.shell:
    cmd: export TMPDIR="{{patch_temp_dir}}";export ORACLE_HOME="{{ FIN_ORACLE_HOME }}";$ORACLE_HOME/OPatch/opatch nrollback -id 32042352,31424070,17777718,32933487,33375194,32355765,23125587 -oh {{ FIN_ORACLE_HOME }} -silent
  register: rb_db_one_off
  ignore_errors: true
  tags:
    - rb_oneoff

- name: display database home one-off patch rollback log
  debug:
    var: rb_db_one_off.stdout_lines
  tags:
    - rb_oneoff

# - name: install release update on the database home
#   become_user: root
#   ansible.builtin.shell:
#     cmd: export TEMP="{{patch_temp_dir}}";export TMPDIR="{{patch_temp_dir}}";export ORACLE_HOME="{{ FIN_ORACLE_HOME }}";$ORACLE_HOME/OPatch/opatchauto apply {{ patch_local_dir }}/{{ gi_patch_id }} -oh {{ FIN_ORACLE_HOME }} -force_conflict
#   register: opatch_apply
#   tags:
#     - ruapply

- name: install release update on the database home
  ansible.builtin.shell:
    cmd: export TEMP="{{patch_temp_dir}}";export TMPDIR="{{patch_temp_dir}}";export ORACLE_HOME="{{ FIN_ORACLE_HOME }}";$ORACLE_HOME/OPatch/opatch apply {{ patch_local_dir }}/{{ gi_patch_id }}/{{ db_patch_id }} -oh {{ FIN_ORACLE_HOME }} -silent
  register: opatch_apply
  tags:
    - ruapply

- name: display database home patch apply log
  become_user: root
  debug:
    var: opatch_apply.stdout_lines
  tags:
    - ruapply

- name: copy the database home patch apply log to a file
  become_user: root
  copy:
    content: "{{ opatch_apply.stdout }}"
    dest: "{{ log_dir }}/db_opatch_apply_{{ ansible_hostname }}_{{ lookup('pipe', 'date +%Y%m%d-%H%M') }}"
  ignore_errors: true
  tags:
    - ruapply

- name: install OCW patch on the database home
  ansible.builtin.shell:
    cmd: export TEMP="{{patch_temp_dir}}";export TMPDIR="{{patch_temp_dir}}";export ORACLE_HOME="{{ FIN_ORACLE_HOME }}";$ORACLE_HOME/OPatch/opatch apply {{ patch_local_dir }}/{{ gi_patch_id }}/35050331 -oh {{ FIN_ORACLE_HOME }} -silent
  register: ocw_apply
  tags:
    - ruapply

- name: install ojvm patch on the database home
  ansible.builtin.shell:
    cmd: export TMPDIR="{{patch_temp_dir}}";export ORACLE_HOME="{{ FIN_ORACLE_HOME }}";$ORACLE_HOME/OPatch/opatch apply {{ patch_local_dir }}/{{ ojvm_patch_id }} -oh {{ FIN_ORACLE_HOME }} -silent
  register: db_ojvmpatch_apply
  tags:
    - ojvmapply

- name: display database home ojvm patch apply log
  debug:
    var: db_ojvmpatch_apply.stdout_lines
  tags:
    - ojvmapply

- name: copy the database home ojvm patch apply log to a file
  copy:
    content: "{{ db_ojvmpatch_apply.stdout }}"
    dest: "{{ log_dir }}/db_ojvm_patch_apply_{{ ansible_hostname }}_{{ lookup('pipe', 'date +%Y%m%d-%H%M') }}"
  tags:
    - ojvmapply

- name: install one-off patch on the database home
  ansible.builtin.shell:
    cmd: export TMPDIR="{{patch_temp_dir}}";export ORACLE_HOME="{{ FIN_ORACLE_HOME }}";cd {{ patch_dir }}/one-off;$ORACLE_HOME/OPatch/opatch napply -id 35037877,35119957 -oh {{ FIN_ORACLE_HOME }} -silent
  register: db_one_off_apply
  tags:
    - oneoffapply

- name: display database home one-off patch apply log
  debug:
    var: db_one_off_apply.stdout_lines
  tags:
    - oneoffapply

- name: verify release update apply on the database home
  ansible.builtin.shell:
    cmd: export ORACLE_HOME="{{ FIN_ORACLE_HOME }}";echo "The below patch instaled on oracle home $ORACLE_HOME";$ORACLE_HOME/OPatch/opatch lspatches
  ignore_errors: true
  register: db_opatch_lsinv
  tags:
    - ruverify

- name: display database home opatch log
  debug:
    var: db_opatch_lsinv.stdout_lines
  tags:
    - ruverify
# - name: switch grid infrastructure resources to cloned home
#   become_user: root
#   ansible.builtin.shell:
#     cmd: export TEMP="{{patch_temp_dir}}";export TMPDIR="{{patch_temp_dir}}";export ORACLE_HOME="{{ GI_ORACLE_HOME }}";$ORACLE_HOME/OPatch/opatchauto apply -switch-clone -oh {{ GI_ORACLE_HOME }}
#   register: opatch_switch
#   tags:
#     - oop_switch

# - name: display switch grid infrastructure resources status
#   become_user: root
#   debug:
#     var: opatch_switch.stdout_lines
#   tags:
#     - oop_switch

# - name: copy the grid infrastructure switch operation log to a file
#   become_user: root
#   copy:
#     content: "{{ opatch_switch.stdout }}"
#     dest: "{{ log_dir }}/gi_opatch_switch_{{ ansible_hostname }}_{{ lookup('pipe', 'date +%Y%m%d-%H%M') }}"
#   ignore_errors: true
#   tags:
#     - oop_switch

# - name: verify release update version on the grid infrastructure home
#   ansible.builtin.shell:
#     cmd: export ORACLE_HOME="{{ CL_GI_ORACLE_HOME }}";echo "The below patch instaled on oracle home $ORACLE_HOME";$ORACLE_HOME/OPatch/opatch lspatches
#   ignore_errors: true
#   register: gi_opatch_lsinv
#   tags:
#     - oop_switch_verify

# - name: display grid infrastructure opatch lspatches output
#   debug:
#     var: gi_opatch_lsinv.stdout_lines
#   tags:
#     - oop_switch_verify
