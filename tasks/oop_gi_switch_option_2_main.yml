---
- name: pre step to switch grid infrastructure resources to cloned home
  become_user: root
  ansible.builtin.shell:
    cmd: export TEMP="{{patch_temp_dir}}";export TMPDIR="{{patch_temp_dir}}";{{ CL_GI_ORACLE_HOME }}/crs/install/rootcrs.sh -prepatch -dstcrshome {{ CL_GI_ORACLE_HOME }}
  register: opatch_switch1
  tags:
    - oop_switch

- name: display pre step to switch grid infrastructure resources status
  become_user: root
  debug:
    var: opatch_switch1.stdout_lines
  tags:
    - oop_switch

- name: switch grid infrastructure resources to cloned home
  become_user: root
  ansible.builtin.shell:
    cmd: export TEMP="{{patch_temp_dir}}";export TMPDIR="{{patch_temp_dir}}";{{ CL_GI_ORACLE_HOME }}/crs/install/rootcrs.sh -postpatch -dstcrshome {{ CL_GI_ORACLE_HOME }}
  register: opatch_switch
  tags:
    - oop_switch

- name: display switch grid infrastructure resources status
  become_user: root
  debug:
    var: opatch_switch.stdout_lines
  tags:
    - oop_switch

- name: copy the grid infrastructure switch operation log to a file
  become_user: root
  copy:
    content: "{{ opatch_switch.stdout }}"
    dest: "{{ log_dir }}/gi_opatch_switch_{{ ansible_hostname }}_{{ lookup('pipe', 'date +%Y%m%d-%H%M') }}"
  ignore_errors: true
  tags:
    - oop_switch

- name: verify release update version on the grid infrastructure home
  ansible.builtin.shell:
    cmd: export ORACLE_HOME="{{ CL_GI_ORACLE_HOME }}";echo "The below patch instaled on oracle home $ORACLE_HOME";$ORACLE_HOME/OPatch/opatch lspatches
  ignore_errors: true
  register: gi_opatch_lsinv
  tags:
    - oop_switch_verify

- name: display grid infrastructure opatch lspatches output
  debug:
    var: gi_opatch_lsinv.stdout_lines
  tags:
    - oop_switch_verify
